<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringFacetInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
      	   http://www.springframework.org/schema/context/spring-context-4.0.xsd
      	   http://www.springframework.org/schema/tx
      	   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
           http://code.alibabatech.com/schema/dubbo
           http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <context:component-scan base-package="rabbit.open.dtx.rpc.test.server"/>

    <!-- 提供方应用信息 -->
    <dubbo:application name="provider"/>
    <!-- 注册中心服务地址 -->
    <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181" check="false"/>
    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="rabbit.open.dtx.rpc.test.server.UserService" ref="UserServiceImpl"/>

    <!-- 配置 数据库属性文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:dubbo-rpc-test-db.properties</value>
            </list>
        </property>
    </bean>

    <bean id="rabbit" class="rabbit.open.orm.datasource.RabbitDataSource">
        <property name="driverClass">
            <value>${jdbc.driverName}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="maxSize">
            <value>${jdbc.maxSize}</value>
        </property>
        <property name="minSize">
            <value>${jdbc.minSize}</value>
        </property>
        <property name="maxIdle">
            <value>${jdbc.maxIdle}</value>
        </property>
        <property name="showSlowSql">
            <value>${jdbc.showSlowSql}</value>
        </property>
        <property name="dumpSuspectedFetch">
            <value>true</value>
        </property>
        <property name="threshold">
            <value>${jdbc.threshold}</value>
        </property>
        <!-- 获取连接等待时间(ms)默认500ms，超过这个时间就会尝试新建连接 -->
        <property name="fetchTimeOut">
            <value>${jdbc.fetchTimeOut}</value>
        </property>
        <property name="maxCachedStmt">
            <value>20</value>
        </property>
    </bean>

    <!-- 配置SessionFactory -->
    <bean id="sessionFactory" class="rabbit.open.orm.core.dml.SessionFactory">
        <property name="showSql">
            <value>${jdbc.showSql}</value>
        </property>
        <property name="formatSql">
            <value>${jdbc.formatSql}</value>
        </property>
        <property name="ddl">
            <value>${jdbc.ddl}</value>
        </property>
        <property name="dialect">
            <value>${jdbc.dialect}</value>
        </property>
        <property name="packages2Scan">
            <value>${jdbc.packages}</value>
        </property>
        <property name="scanJar">
            <value>${jdbc.scanJar}</value>
        </property>
        <property name="dataSource" ref="txDataSource"/>
    </bean>

    <bean id="transactionManager" class="rabbit.open.orm.core.spring.RabbitTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 开启事务控制的注解支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- ！！！！！！！！分布式事务配置   -->

    <bean id="txDataSource" class="rabbit.open.dtx.client.datasource.proxy.TxDataSource">
        <!--真实数据源-->
        <constructor-arg name="dataSource" ref="rabbit"/>
        <!--一个应用下如果有多个数据源，那么这个名字不能重复-->
        <constructor-arg name="dataSourceName" value="txDataSource"/>
        <!--分布式事务管理器-->
        <constructor-arg name="transactionManger" ref="dubboTransactionManager2"/>
    </bean>

    <!--针对dubbo的分布式事务管理器-->
    <bean id="dubboTransactionManager2" class="rabbit.open.dtx.client.rpc.support.DubboTransactionManager" destroy-method="destroy">
        <constructor-arg name="applicationName" value="user-app"/>
        <constructor-arg name="hosts" value="localhost:10010"/>
    </bean>

    <!-- dtx 注解增强器 -->
   <bean id="transactionEnhancer2" class="rabbit.open.dtx.client.enhance.DistributedTransactionEnhancer">
        <property name="transactionManger" ref="dubboTransactionManager2"/>
    </bean>

</beans>


